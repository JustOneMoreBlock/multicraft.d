## This is the main configuration file for the Multicraft daemon. Any change to
## this file requires a restart of the daemon or a reload through the panel
## under Settings->Operations. Not all settings can be reloaded while the
## daemon is running.
## Lines with a '#' in front of them are disabled and will not have any effect.
## Remove the '#' to enable the setting.
[multicraft]
## The daemon will run under this user (not used for Windows)
user = minecraft:minecraft
## Directories created by Multicraft will have the owner set to
## the user and the group set to the webUser (not used for Windows)
## default: same as "user"
webUser = www-data:www-data

## Remote IP restrictions for daemon connections. This is a comma separated
## list of IPs that are allowed to connect to this daemon. Empty for all
## remote IPs allowed.
## default: empty
#allowedIps = 127.0.0.1

## The maximum number of daemon connections to allow to this daemon.
## default: 500
#maxConnections = 500

## The maximum number of daemon connections a single client can open.
## default: 50
#maxClientConnections = 50

## The base directory of the multicraft install. Relative to the users
## home directory or absolute. Must exist.
## default: multicraft (-> /home/"user"/multicraft)
baseDir = multicraft
## The directory the daemon binaries reside in
## default: bin (-> "baseDir"/bin)
daemonDir = bin
## The data directory. Contains the database, socket, log and
## must be accessible by the control panel user if using a SQLite DB
## default: data (-> "baseDir"/data)
dataDir = data
## The directory jar files can be placed in
## default: jar (-> "baseDir"/jar)
jarDir = jar
## The directory containing all the servers. Users can be given access
## to specific subdirectories containing their server data
## default: servers (-> "baseDir"/servers)
serversDir = servers
## The directory containing server templates
## default: templates (-> "baseDir"/templates)
templatesDir = templates
## The following files contain daemon specific data.
## The paths specified are relative to "baseDir"
pidFile = multicraft.pid
logFile = multicraft.log
licenseFile = multicraft.key
scriptsFile = scripts.conf
## This file defines the config file to use depending on the executable name
configsFile = server_configs.conf
## This config file contains the default server configuration. It is not
## in the "jar" directory so it does not get listed as a selection in the
## JAR File dropdown.
defaultConfigFile = default_server.conf

## Note that for all of the above settings where a file or directory is
## indicated you can also use absolute paths (/dir), home-relative
## paths (~/dir) or relative paths (./dir or ../dir). "dir" stands for
## the setting you're editing.
## When not using absolute/relative paths the setting is taken to be
## relative to the home directory of the user configured by the "user"
## setting.
## Examples:
## - Changing "baseDir" to ./multicraft will cause multicraft to search
##   all the files in a subdirectory "multicraft" of the directory it's
##   called from
## - Changing "logFile" to ~/multicraft.log will cause Multicraft to log
##   everything to the file multicraft.log in the home directory of the
##   user configured by the "user" setting

## The maximum size of one logfile after which the log will be rotated
## default: 20971520 (20 MB)
logSize = 20971520

## The number of log files to keep (multicraft.log.1 ... multicraft.log.X)
## default: 9
logCount = 9

## Synchronize log writes. Disabling this will improve performance at the
## risk of having some log entries overlap.
## default: true
#logSync = false

## Use thesyslog facility instead of logging to a file.
## default: false
#logSyslog = true

## The syslog facility to log to. Possible values: auth, cron, daemon,
## kern, lpr, mail, news, security, syslog, user, uucp, local10-17
## default: daemon
#logFacility = daemon

## Log all commands the daemon receives from the panel
## default: false
#logCommands = false

## Log server console output to the log file under these conditions:
## - always     Always log server console output
## - startup    Only log server console output during server startup
## - running    Only log server console output after server startup
## - never      Never log server console output
## default: startup
#logServerConsole = startup

## Delay between server auto-starts in milliseconds.
## default: 750
autostartDelay = 750

## Automatically update server binaries, conf files or both on daemon
## startup. Valid values:
## - empty      Don't update anything on startup
## - base       Update the server binaries and conf files for the base server
##              types that come with Multicraft. Currently:
##                  minecraft_server.jar.conf, minecraft_optimized.jar.conf,
##                  craftbukkit.jar.conf, spigot.jar.conf
## - initial    Same as "base" but only update if the jar files don't exist
## - binary     Update all server binaries on daemon startup
## - conf       Update all server conf files on daemon startup
## - both       Update all server binaries and conf files on daemon startup
## default: empty
startupServerUpdate = initial

## A list of section names in .conf files that can safely be defined
## or overridden by users. Note that this is just a default value that
## can itself be overridden in the .conf files in the daemon directory.
## Use * to allow all sections or a regular expression matching allowed
## sections only.
## default: ^(encoding|commands|parse_.+)$
#safeConfSections = ^(encoding|commands|parse_.+)$

## Allow symlinks where directories are expected. This check is done for
## security.
## default: false
#allowSymlinks = false

## Skip the integrity check for directories. This check is done for
## security, it verifies that a directory entry is consistent with its
## filesystem entry. You can disable this if this check causes issues
## on your particular filesystem.
## default: true
#skipIntegrityCheck = false

## The timeout for template setup operations in seconds
## default: 600
#templateSetupTimeout = 600

## Disables the template functionality. Please use the setting in the panel to
## disable it there.
## default: false
#templatesDisabled = false

## Advanced: Use TCP keepalive for daemon connections
## default: true
#tcpKeepAlive = true
## Advanced: Use TCP keepalive for FTP connections
## default: true
#ftpTcpKeepAlive = true
## TCP keepalive parameters, use 0 for system default
## default: 0
tcpKeepAliveIdle = 60
tcpKeepAliveInterval = 5
tcpKeepAliveCount = 6
## Advanced: Set global timeout for TCP connections in seconds, 0 for no
## timeout
## default: 120
tcpTimeout = 120

## Advanced: Prefer IPv4 for version check requests.
## Can speed up hostname lookup.
## default: true
#preferIPv4 = true

## Whether to delete the server directory on the old daemon after a server
## move. This is disabled by default for safety.
## default: false
#deleteAfterMove = false

## Only allow a single script to be run at a time for each server. If disabled
## there is no limit on the number of scripts that can be running at the same
## time.
## default: false
singleScriptPerServer = true


## Stop automatically restarting a crashed server if it exceeds a certain
## number of restarts within a set time period. For example: With
## crashRestartLimit=10 and crashRestartPeriod=300 a server will no longer
## automatically restart when it crashes if it already crashed 10 times within
## the last 5 minutes
##
## The number of crash related restarts after which to stop restarting a
## server. 0 to disable.
## default: 0
crashRestartLimit = 0
## The period in seconds during which to count crash related automatic server
## restarts. If this is set to 0 the server will stop restarting regardless of
## the time period the restart limit was hit in.
## default: 300
#crashRestartPeriod = 300